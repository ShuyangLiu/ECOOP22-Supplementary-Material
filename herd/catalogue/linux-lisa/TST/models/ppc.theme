Bell to PPC
"r[once] %x %y" -> "lwz %x,0(%y)"
"r[once] %x y" -> "lwz %x,0(%y)"
"r[once] %x y+%z" -> "lwzx %x,%z,%y"
"w[once] x &c" -> "li %tmp,&c; stw %tmp,0(%x)"
"w[once] x %y" -> "stw %y,0(%x)"
"w[once] %x &c" -> "li %tmp,&c; stw %tmp,0(%x)"
"w[once] %x %y" -> "stw %y,0(%x)"
"w[once] y+%z %c" -> "stwx %c,%z,%y"
"w[once] y+%z &c" -> "li %tmp,&c; stwx %tmp,%z,%y"
"f[mb]"        -> "sync"
"f[wmb]"        -> "lwsync"
"f[rmb]"        -> "lwsync"
"f[rb_dep]" -> ""
"mov %a (and %b &c)" -> "andi. %a,%b,&c"
"mov %a (xor %b %c)" -> "xor %a,%b,%c"
"mov %a (add %b &c)" -> "addi %a,%b,&c"
"w[release] x &c" -> "lwsync; li %tmp,&c; stw %tmp,0(%x)"
"w[release] %x &c" -> "lwsync; li %tmp,&c; stw %tmp,0(%x)"
"w[release] %x %y" -> "lwsync; stw %y,0(%x)"
"w[release] x %y" ->  "lwsync; stw %y,0(%x)"
"r[acquire] %x %y" -> "lwz %x,0(%y);lwsync"
"r[acquire] %x y" -> "lwz %x,0(%y);lwsync"
"r[deref] %x %y" -> "lwz %x,0(%y);lwsync"
"r[deref] %x y" -> "lwz %x,0(%y);lwsync"
"mov %x (eq %y &c);b[] %x label;" -> "cmpwi %y,&c; beq label;"
"mov %x (neq %y &c);b[] %x label;" -> "cmpwi %y,&c; bne label;"
"b[] label" -> "b label"