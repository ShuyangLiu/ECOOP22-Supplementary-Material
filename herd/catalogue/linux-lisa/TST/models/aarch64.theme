Bell to AArch64
"r[once] %x %y" -> "LDR w%x,[%y]"
"r[once] %x y" -> "LDR w%x,[%y]"
"r[once] %x y+%z" -> "LDR w%x,[%y,w%z,SXTW]"
"w[once] %x &c" -> "MOV w%tmp,&c; STR w%tmp,[%x]"
"w[once] x &c" -> "MOV w%tmp,&c; STR w%tmp,[%x]"
"w[once] %x %y" -> "STR w%y,[%x]"
"w[once] x %y" -> "STR w%y,[%x]"
"w[once] y+%z %c" -> "STR w%c,[%y,w%z,SXTW]"
"w[once] y+%z &c" -> "MOV w%tmp,&c;STR w%tmp,[%y,w%z,SXTW]"
"r[acquire] %x %y" -> "LDAR w%x,[%y]"
"r[acquire] %x y" -> "LDAR w%x,[%y]"
"w[release] %x &c" -> "MOV w%tmp,&c; STR w%tmp,[%x]"
"w[release] x &c" -> "MOV w%tmp,&c; STLR w%tmp,[%x]"
"w[release] %x %y" -> "STR w%y,[%x]"
"w[release] x %y" -> "STLR w%y,[%x]"
"f[mb]" -> "DMB SY"
"f[wmb]" -> "DMB ST"
"f[rmb]" -> "DMB LD"
"f[rb_dep]" -> ""
"mov %a (and %b &c)" -> "AND w%a,w%b,&c"
"mov %a (xor %b %c)" -> "EOR w%a,w%b,w%c"
"mov %a (add %b &c)" -> "ADD w%a,w%b,&c"
"mov %x (eq %y &c);b[] %x label;" -> "CMP w%y,&c; B.EQ label;"
"mov %x (neq %y &c);b[] %x label;" -> "CMP w%y,&c; B.NE label;"
"b[] label" -> "B label"


