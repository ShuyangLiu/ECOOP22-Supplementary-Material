LISA WW+RR+WW+RW+poascarsystemascaragent+poascaragentascarwg+poascarsystemascarsystem+poascarsystemascarsystem+0-wg-12-wg-agent-3-wg
"PodWWAScarSystemAScarAgent RfeAScarAgentAScarAgent PodRRAScarAgentAScarWg FreAScarWgAScarSystem PodWWAScarSystemAScarSystem RfeAScarSystemAScarSystem PodRWAScarSystemAScarSystem WseAScarSystemAScarSystem"
Scopes=(agent (wg 0) (wg 1 2)) (wg 3)
Cycle=RfeAScarAgentAScarAgent PodRRAScarAgentAScarWg FreAScarWgAScarSystem PodWWAScarSystemAScarSystem RfeAScarSystemAScarSystem PodRWAScarSystemAScarSystem WseAScarSystemAScarSystem PodWWAScarSystemAScarAgent
Relax=
Safe=Rfe Fre Wse PodWW PodRW PodRR
Prefetch=0:x=F,0:y=W,1:y=F,1:z=T,2:z=F,2:a=W,3:a=F,3:x=W
Com=Rf Fr Rf Ws
Orig=PodWWAScarSystemAScarAgent RfeAScarAgentAScarAgent PodRRAScarAgentAScarWg FreAScarWgAScarSystem PodWWAScarSystemAScarSystem RfeAScarSystemAScarSystem PodRWAScarSystemAScarSystem WseAScarSystemAScarSystem
{
1:r1=-1;
}
 P0                        | P1                        | P2                        | P3                         ;
 w[atomic,scar,system] x 2 | r[atomic,scar,agent] r0 y | w[atomic,scar,system] z 1 | r[atomic,scar,system] r0 a ;
 w[atomic,scar,agent] y 1  | mov %T1 (neq r0 1)        | w[atomic,scar,system] a 1 | mov %T1 (neq r0 1)         ;
                           | b[] %T1 Exit1             |                           | b[] %T1 Exit3              ;
                           | r[atomic,scar,wg] r1 z    |                           | w[atomic,scar,system] x 1  ;
                           | Exit1:                    |                           | Exit3:                     ;
scopes: (agent (wg 0) (wg 1 2)) (wg 3)
exists (1:r0=1 /\ 1:r1=0 /\ 3:r0=1 /\ x=2)
